services:
  backend:
    build:
      context: ./project.emplyee.student  # Path to backend folder
      dockerfile: Dockerfile  # Ensure this file exists
    image: backendimage
    container_name: spring-boot-app
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_NAME: employee.student.project
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/UseCase-2
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: Chatur@123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17
    container_name: postgres-db
    restart: always
    environment:
      POSTGRES_DB: UseCase-2
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Chatur@123
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d UseCase-2"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./React/usecase-employee  # âœ… Updated to correct frontend path
      dockerfile: Dockerfile  # Ensure this file exists
    image: frontendimage
    container_name: react-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./React/usecase-employee:/app
      - /app/node_modules
